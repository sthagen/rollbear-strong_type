name: CI

on: [push, pull_request]

jobs:
  build_linux:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        config:
          - { cxx: clang++-10, std: 14, stdlib: "-stdlib=libc++", linker: "-fuse-ld=gold -lc++abi" }
          - { cxx: clang++-10, std: 17, stdlib: "-stdlib=libc++", linker: "-fuse-ld=gold -lc++abi" }
          - { cxx: clang++-10, std: 20, stdlib: "-stdlib=libc++", linker: "-fuse-ld=gold -lc++abi" }
          - { cxx: clang++-10, std: 14 }
          - { cxx: clang++-10, std: 17 }
          - { cxx: clang++-10, std: 20 }
          - { cxx: g++-10, std: 14 }
          - { cxx: g++-10, std: 17 }
          - { cxx: g++-10, std: 20 }
          - { cxx: clang++-9, std: 14 }
          - { cxx: clang++-9, std: 17 }
          - { cxx: clang++-9, std: 20 }
          - { cxx: g++-9, std: 14 }
          - { cxx: g++-9, std: 17 }
          - { cxx: g++-9, std: 20 }
          - { cxx: clang++-8, std: 14 }
          - { cxx: clang++-8, std: 17 }
          - { cxx: g++-8, std: 14 }
          - { cxx: g++-8, std: 17 }
          - { cxx: g++-8, std: 20 }
          #- { cxx: clang++-7, std: 14 }
          #- { cxx: clang++-7, std: 17 }
          - { cxx: g++-7, std: 14 }
          - { cxx: g++-7, std: 17 }
          #- { cxx: "clang++-6.0", std: 14 }
          #- { cxx: "clang}++-6.0", std: 17 }

    name: "Linux ${{matrix.config.cxx}} C++${{matrix.config.std}} ${{matrix.config.stdlib}}"
    steps:
      - uses: actions/checkout@v2

      - name: Install GCC 7
        id: install_gcc_7
        if: ( matrix.config.cxx == 'g++-7' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y gcc-7 g++-7

      - name: Install GCC 8
        id: install_gcc_8
        if: ( matrix.config.cxx == 'g++-8' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y gcc-8 g++-8

      - name: Install Clang 8
        id: install_clang_8
        if: ( matrix.config.cxx == 'clang++-8' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y clang-8

      - name: Install Clang 9
        id: install_clang_9
        if: ( matrix.config.cxx == 'clang++-9' )
        shell: bash
        working-directory: ${{ env.HOME }}
        run: |
          sudo apt-get install -y clang-9

      - name: "setup"
        shell: bash
        run: |
          cmake \
            -S . \
            -B build \
            -DCMAKE_CXX_COMPILER=${{matrix.config.cxx}} \
            -DCMAKE_CXX_STANDARD=${{matrix.config.std}} \
            -DCMAKE_CXX_FLAGS="${{matrix.config.stdlib}} -Wall -Wextra -pedantic -Werror" \
            -DCMAKE_BUILD_TYPE=Debug
      - name: "build"
        run: |
          cmake --build build --target self_test
      - name: "test"
        run: |
          ./build/self_test

  build_windows:
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        config:
          - { std: 14 }
          - { std: 17 }
          - { std: 20 }
    name: "Windows C++${{matrix.config.std}}"
    steps:
      - uses: actions/checkout@v2
      - name: "setup"
        shell: bash
        run: |
          cmake \
            -S . \
            -B build \
            -DCMAKE_CXX_STANDARD=${{matrix.config.std}} \
            -DCMAKE_BUILD_TYPE=Debug
      - name: "build"
        run: |
          cmake --build build --target self_test
      - name: "test"
        run: |
          build\Debug\self_test.exe
